# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build/ohos.gni")
import("//foundation/appexecfwk/standard/appexecfwk.gni")

SUBSYSTEM_DIR = "//foundation/communication"
NETMANAGERNATIVE_ROOT = "$SUBSYSTEM_DIR/netstack/http/services/netmanagernative"
NETMANAGERNATIVE_SOURCE_DIR = "$NETMANAGERNATIVE_ROOT/net_mgr_native"
NETMANAGERNATIVE_COMMON_SOURCE_DIR = "$NETMANAGERNATIVE_ROOT/common"

ohos_shared_library("net_manager_native") {
    sources = [
        "$NETMANAGERNATIVE_SOURCE_DIR/src/iptables_process.cpp",
        "$NETMANAGERNATIVE_SOURCE_DIR/src/native_netd_service.cpp",
        "$NETMANAGERNATIVE_SOURCE_DIR/src/route_controller.cpp",
        "$NETMANAGERNATIVE_SOURCE_DIR/src/interface_controller.cpp",
        "$NETMANAGERNATIVE_SOURCE_DIR/src/netlink_event.cpp",
        "$NETMANAGERNATIVE_SOURCE_DIR/src/netlink_handler.cpp",
        "$NETMANAGERNATIVE_SOURCE_DIR/src/netlink_manager.cpp",
        "$NETMANAGERNATIVE_SOURCE_DIR/src/netlink_listener.cpp",
        "$NETMANAGERNATIVE_SOURCE_DIR/src/netlink_socket.cpp",
        "$NETMANAGERNATIVE_SOURCE_DIR/src/event_reporter.cpp",
        "$NETMANAGERNATIVE_SOURCE_DIR/src/sock_diag.cpp",
        "$NETMANAGERNATIVE_SOURCE_DIR/src/network.cpp",
        "$NETMANAGERNATIVE_SOURCE_DIR/src/netlink_msg.cpp",
        "$NETMANAGERNATIVE_SOURCE_DIR/src/fwmark_server.cpp",
        "$NETMANAGERNATIVE_SOURCE_DIR/src/traffic_controller.cpp",
        "$NETMANAGERNATIVE_SOURCE_DIR/src/dnsresolv_service.cpp",
        "$NETMANAGERNATIVE_SOURCE_DIR/src/dnsresolv_controller.cpp",
        "$NETMANAGERNATIVE_SOURCE_DIR/src/dnsresolv_cache.cpp",
        "$NETMANAGERNATIVE_SOURCE_DIR/src/get_addr_info.cpp",
        "$NETMANAGERNATIVE_SOURCE_DIR/src/network_controller.cpp",
        "$NETMANAGERNATIVE_COMMON_SOURCE_DIR/src/interface_utils.cpp",
        "$NETMANAGERNATIVE_COMMON_SOURCE_DIR/src/error_code.cpp",
        "$NETMANAGERNATIVE_COMMON_SOURCE_DIR/src/server_template.cpp",
        "$NETMANAGERNATIVE_COMMON_SOURCE_DIR/src/server_socket.cpp",
        "$NETMANAGERNATIVE_COMMON_SOURCE_DIR/src/socket_base.cpp",
        "$NETMANAGERNATIVE_COMMON_SOURCE_DIR/src/thread_pool.cpp",
        "$NETMANAGERNATIVE_COMMON_SOURCE_DIR/src/net_utils.cpp",
        "$NETMANAGERNATIVE_COMMON_SOURCE_DIR/src/rwlock.cpp",
        "$NETMANAGERNATIVE_COMMON_SOURCE_DIR/src/utils.cpp",
        "$NETMANAGERNATIVE_SOURCE_DIR/client/src/dnsresolv_client.cpp",
    ]

    include_dirs = [
        "$NETMANAGERNATIVE_SOURCE_DIR/include",
        "$NETMANAGERNATIVE_COMMON_SOURCE_DIR/include",
        "$NETMANAGERNATIVE_SOURCE_DIR/client/include",
    ]

    deps = [
        "//foundation/distributedschedule/safwk/interfaces/innerkits/safwk:system_ability_fwk",
        "//utils/native/base:utils",
        "${aafwk_path}/interfaces/innerkits/base:base",
        "${aafwk_path}/interfaces/innerkits/want:want",

    ]

    libs = [
        "pthread",
        "resolv"
    ]

    external_deps = [
    ]

    defines = [
        "NETMGR_LOG_TAG = \"NetManagerNative\"",
        "LOG_DOMAIN = 0xD0015B0",
    ]

    if (is_standard_system) {
        external_deps += [ "hiviewdfx_hilog_native:libhilog" ]
    } else {
        external_deps += [ "hilog:libhilog" ]
    }

    subsystem_name = "communication"
    part_name = "netstack"
}
