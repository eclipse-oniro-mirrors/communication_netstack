# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/communication/netstack/netstack_config.gni")

SOCKET_INCLUDE_DIR = "$NETSTACK_DIR/frameworks/js/napi/socket"

utils_source = [
  "$SOCKET_INCLUDE_DIR/options/src/net_address.cpp",
  "$SOCKET_INCLUDE_DIR/socket_exec/src/socket_exec.cpp",
  "$SOCKET_INCLUDE_DIR/async_context/src/bind_context.cpp",
  "$SOCKET_INCLUDE_DIR/options/src/socket_state_base.cpp",
  "$SOCKET_INCLUDE_DIR/options/src/socket_remote_info.cpp",
  "$SOCKET_INCLUDE_DIR/options/src/extra_options_base.cpp",
  "$SOCKET_INCLUDE_DIR/options/src/tcp_connect_options.cpp",
  "$SOCKET_INCLUDE_DIR/options/src/tcp_extra_options.cpp",
  "$SOCKET_INCLUDE_DIR/options/src/tcp_send_options.cpp",
  "$SOCKET_INCLUDE_DIR/options/src/udp_extra_options.cpp",
  "$SOCKET_INCLUDE_DIR/options/src/udp_send_options.cpp",
  "$SOCKET_INCLUDE_DIR/async_context/src/connect_context.cpp",
  "$SOCKET_INCLUDE_DIR/async_context/src/common_context.cpp",
  "$SOCKET_INCLUDE_DIR/async_context/src/udp_extra_context.cpp",
  "$SOCKET_INCLUDE_DIR/async_context/src/udp_send_context.cpp",
  "$SOCKET_INCLUDE_DIR/async_context/src/tcp_extra_context.cpp",
  "$SOCKET_INCLUDE_DIR/async_context/src/tcp_send_context.cpp",
]

common_include = [
  "//foundation/arkui/ace_engine/frameworks/base/utils",
  "//foundation/arkui/napi/interfaces/kits",
  "//foundation/arkui/napi",
  "//third_party/node/src",
]

config("tls_socket_config") {
  include_dirs = [ "//third_party/openssl/include" ]
}

config("tls_socket_public_config") {
  include_dirs = [
    "$NETSTACK_DIR/frameworks/native/tls_socket/include",
    "$SOCKET_INCLUDE_DIR/async_context/include",
    "$SOCKET_INCLUDE_DIR/async_work/include",
    "$SOCKET_INCLUDE_DIR/constant/include",
    "$SOCKET_INCLUDE_DIR/socket_exec/include",
    "$SOCKET_INCLUDE_DIR/socket_module/include",
    "$SOCKET_INCLUDE_DIR/options/include",
    "$SOCKET_INCLUDE_DIR/task_queue/include",
    "$NETSTACK_DIR/interfaces/innerkits/tls_socket/include",
  ]
  include_dirs += common_include
}

ohos_shared_library("tls_socket") {
  sources = [
    "src/tls.cpp",
    "src/tls_certificate.cpp",
    "src/tls_configuration.cpp",
    "src/tls_context.cpp",
    "src/tls_key.cpp",
    "src/tls_socket.cpp",
    "src/tls_socket_internal.cpp",
  ]
  sources += utils_source

  public_deps = [
    "$NETSTACK_DIR/utils:stack_utils_common",
    "$NETSTACK_DIR/utils/napi_utils:napi_utils",
    "//third_party/openssl:libcrypto_shared",
    "//third_party/openssl:ssl_source",
  ]
  external_deps = [
    "c_utils:utils",
    "hiviewdfx_hilog_native:libhilog",
    "napi:ace_napi",
  ]

  configs = [ ":tls_socket_config" ]
  public_configs = [ ":tls_socket_public_config" ]

  part_name = "netstack"
  subsystem_name = "communication"
}
