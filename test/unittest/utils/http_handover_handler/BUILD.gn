# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("//foundation/communication/netstack/netstack_config.gni")

NETSTACK_UTILS_ROOT = "$SUBSYSTEM_DIR/netstack/utils"

utils_include = [ "$NETSTACK_UTILS_ROOT/log/include" ]

common_external_deps = [
  "c_utils:utils",
  "hilog:libhilog",
]

ohos_unittest("http_handover_handler_test") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  branch_protector_ret = "pac_ret"

  module_out_path = "netstack/netstack/http_handover_handler_test"

  include_dirs = [
    "$NETSTACK_DIR/frameworks/js/napi/http/async_context/include",
    "$NETSTACK_DIR/frameworks/js/napi/http/async_work/include",
    "$NETSTACK_DIR/frameworks/js/napi/http/cache/base64/include",
    "$NETSTACK_DIR/frameworks/js/napi/http/cache/cache_proxy/include",
    "$NETSTACK_DIR/frameworks/js/napi/http/cache/cache_strategy/include",
    "$NETSTACK_DIR/frameworks/js/napi/http/constant/include",
    "$NETSTACK_DIR/frameworks/js/napi/http/http_exec/include",
    "$NETSTACK_DIR/frameworks/js/napi/http/options/include",
    "$NETSTACK_DIR/utils/common_utils/include",
    "$NETSTACK_DIR/utils/profiler_utils/include",
    "$NETSTACK_DIR/utils/tlv_utils/include",
    "$NETSTACK_UTILS_ROOT/http_over_curl/include",
  ]
  include_dirs += utils_include

  defines = []

  deps = [
    "$NETSTACK_DIR/frameworks/js/napi/http:http",
    "$NETSTACK_DIR/utils/napi_utils:napi_utils",
    "$NETSTACK_DIR/utils/napi_utils:napi_utils_static",
  ]

  external_deps = common_external_deps
  external_deps += [
    "ability_runtime:wantagent_innerkits",
    "curl:curl_shared",
    "hiprofiler:libnetwork_profiler",
    "init:libbegetutil",
    "ipc:ipc_single",
    "napi:ace_napi",
    "time_service:time_client",
    "hiappevent:hiappevent_innerapi",
  ]

  if (is_mingw || is_mac) {
    sources +=
        [ "$NETSTACK_DIR/utils/common_utils/src/netstack_common_utils.cpp" ]
    deps += [
      "//vendor/open_source/boringssl:crypto_boringssl",
      "//vendor/open_source/boringssl:ssl_boringssl",
    ]
  } else {
    if (defined(global_parts_info) &&
        defined(global_parts_info.communication_netmanager_base) &&
        global_parts_info.communication_netmanager_base) {
      external_deps += [
        "netmanager_base:net_conn_manager_if",
        "netmanager_base:net_security_config_if",
        "netmanager_base:netsys_client",
        "hitrace:hitrace_meter",
        "samgr:samgr_proxy",
        "safwk:system_ability_fwk",
      ]
      defines += [
        "HAS_NETMANAGER_BASE=1",
        "HTTP_HANDOVER_FEATURE",
        "HTTP_STACK_NAME=\"test\"",
      ]
    } else {
      defines += [ "HAS_NETMANAGER_BASE=0" ]
    }
  }

  sources = [
    "$NETSTACK_DIR/frameworks/js/napi/http/async_context/src/request_context.cpp",
    "$NETSTACK_DIR/frameworks/js/napi/http/constant/src/constant.cpp",
    "$NETSTACK_DIR/frameworks/js/napi/http/http_exec/src/http_exec.cpp",
    "$NETSTACK_DIR/frameworks/js/napi/http/http_exec/src/http_tls_config.cpp",
    "$NETSTACK_DIR/frameworks/js/napi/http/options/src/http_request_options.cpp",
    "$NETSTACK_DIR/utils/profiler_utils/src/netstack_network_profiler.cpp",
    "$NETSTACK_DIR/utils/http_over_curl/src/http_handover_handler.cpp",
    "http_handover_handler_test.cpp",
  ]

  part_name = "netstack"
  subsystem_name = "communication"
}

group("unittest") {
  testonly = true
  deps = [ ":http_handover_handler_test" ]
}
