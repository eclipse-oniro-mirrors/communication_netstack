# Copyright (c) 2022-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("//foundation/communication/netstack/netstack_config.gni")

NETSTACK_UTILS_ROOT = "$SUBSYSTEM_DIR/netstack/utils"

NETSTACK_NAPI_ROOT = "$SUBSYSTEM_DIR/netstack/frameworks/js/napi/"

utils_include = [ "$NETSTACK_UTILS_ROOT/log/include" ]

common_external_deps = [
  "c_utils:utils",
  "hilog:libhilog",
]

ohos_unittest("netstack_network_profiler_utils_test") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  branch_protector_ret = "pac_ret"

  module_out_path = "netstack/netstack_network_profiler_utils_test"

  include_dirs = [
    "$NETSTACK_INNERKITS_DIR/http_client/include",
    "$NETSTACK_NAPI_ROOT/http/constant/include",
    "$NETSTACK_NAPI_ROOT/http/options/include",
    "$NETSTACK_UTILS_ROOT/profiler_utils/include",
    "$NETSTACK_UTILS_ROOT/tlv_utils/include",
    "$THIRD_PARTY_ROOT/curl/include",
    "$NETSTACK_DIR/utils/common_utils/include",
    "//base/startup/init/interfaces/innerkits/include/",
  ]
  include_dirs += utils_include

  external_deps = common_external_deps
  external_deps += [
    "ability_runtime:wantagent_innerkits",
    "curl:curl_shared",
    "hiprofiler:libnetwork_profiler",
    "time_service:time_client",
  ]

  deps = [ "$NETSTACK_DIR/utils/napi_utils:napi_utils" ]

  sources = [
    "$NETSTACK_NAPI_ROOT/http/constant/src/constant.cpp",
    "$NETSTACK_NAPI_ROOT/http/options/src/http_request_options.cpp",
    "$NETSTACK_NAPI_ROOT/http/options/src/http_response.cpp",
    "$NETSTACK_NATIVE_ROOT/http/http_client/http_client_request.cpp",
    "$NETSTACK_NATIVE_ROOT/http/http_client/http_client_response.cpp",
    "$NETSTACK_UTILS_ROOT/profiler_utils/src/http_client_network_message.cpp",
    "$NETSTACK_UTILS_ROOT/profiler_utils/src/http_network_message.cpp",
    "$NETSTACK_UTILS_ROOT/profiler_utils/src/i_network_message.cpp",
    "$NETSTACK_UTILS_ROOT/profiler_utils/src/netstack_network_profiler.cpp",
    "$NETSTACK_UTILS_ROOT/tlv_utils/src/tlv_utils.cpp",
    "NetstackNetworkProfilerUtilsTest.cpp",
  ]

  part_name = "netstack"
  subsystem_name = "communication"
}

group("unittest") {
  testonly = true
  deps = [ ":netstack_network_profiler_utils_test" ]
}
